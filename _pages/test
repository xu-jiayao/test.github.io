<!--- # ðŸŽ¥ About Compressive Sensing and Image Codec
-  **Image Codec (Encoder & Decoder)**
   
   Similar to other data compression and feature extraction techniques, the aim of image codecs is to reduce image redundancies, thereby necessitating fewer bits to convey the entire image information, thus conserving storage space while preserving quality.
   
   Compression methods utilized in image codecs can be categorized into two main groups: lossy compression and lossless compression.
   Both categories seek to exploit similarities among image blocks to diminish the volume of the original data, thereby enhancing compression ratios.
   
   In convolutional codecs, such as HEVC and JPEG, the decoder performs the inverse operations of the encoder, typically requiring less computational power. The specific details related to convolutional codecs are as follows:

   ([high resolution version of Fig.1](/images/research/convolutional codec frameworks.pdf))
   
  <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/convolutional codec frameworks.bmp">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 1. The convolutional codecs framework.</div>
  </center>
<br> 
   
 
-  **Compressive Sensing (CS)**

   As a leading field in representing low-dimensional structured data, Compressive Sensing (CS) emerges as a groundbreaking theory in signal sampling.
   It transcends the constraints of the conventional Nyquist sampling theorem by capitalizing on data sparsity to enable downsampling, thereby reducing hardware demands in analog-to-digital (A/D) processing.

   In CS, sampling and compression involve straightforward linear projections, shifting the computational complexity to the reconstruction, similar to the role of decoders in convolutional image codecs. Down-sampling is achieved by reducing the signal's dimensionality, and the compression ratio of CS represents the dimensional ratio between the original and compressed signals.

   **However, the compression ratio, in terms of bits per pixel (bpp), is still not satisfied. In addition, reconstruction is an NP-hard problem, making real-time processing challenging, thus becoming a primary bottleneck in CS applications.**
   

   ([high resolution version of Fig.2](/images/research/compressive sensing framework.pdf))
   
  <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/compressive sensing framework.bmp">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 2. The Compressive Sensing framework.</div>
  </center>
   <br>  -->
   
<!---  <br>  It offers cost-effective sampling compared to convolutional codecs but encounters two main challenges: inadequate compression ratios, measured in bits per pixel (bpp), and difficulties in real-time processing due to the reconstruction process.  -->

   
  
<!---    This process of sampling and compression, which involves hardware devices, is typically implemented through software simulation.

    The details of the simulation are as follows:
   
   ([high resolution version of Fig.3](/images/research/sampling.pdf))

   <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/sampling.bmp">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 3. The sampling and compression process in CS. </div>
  </center>
  <br>  
   Two conditions are essential to guarantee successful reconstruction. The first is the sparsity of the original signal. Since image signals are dense, a transform matrix is introduced to sparsify the image signal. The second condition is the incoherence between the transform matrix and the measurement matrix. -->
   
<!---   The reconstruction theory, reconstruction process, and the relationship among parameters used in reconstruction are as follows:
   
   ([high resolution version of Fig.4](/images/research/reconstruction problem.pdf))

   <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/reconstruction problem.BMP">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 4. The reconstruction issue description. </div>
  </center>
  <br> 

  ([high resolution version of Fig.5](/images/research/reconstruction process.pdf))

   <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/reconstruction process.bmp">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 5. The reconstruction process. </div>
  </center>
  <br> 

  ([high resolution version of Fig.6](/images/research/parameter relation.pdf))

   <center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" 
    src="/images/research/parameter relation.bmp">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">Figure 6. The relationship among parameters used in the reconstruction. </div>
  </center>
  <br>  -->
